{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNp+CPeRG/HxI8eqksDFT4k",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Goutam-dro/LGMVIP-Data-Science-Task2/blob/main/TASK%202%20%3A%20Stock%20Market%20Prediction%20and%20Forecasting%20Using%20Stacked%20LSTM\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "wccdXOM6xkzn"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "url = 'https://raw.githubusercontent.com/mwitiderrick/stockprice/master/NSE-TATAGLOBAL.csv'\n",
        "dataset_train = pd.read_csv(url)\n",
        "training_set = dataset_train.iloc[:,1:2].values"
      ],
      "metadata": {
        "id": "7v8y46WuzJ27"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dataset_train.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "mAQx5yfGzPro",
        "outputId": "85955889-d5a7-42c2-807d-13217a45ddcb"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         Date    Open    High     Low    Last   Close  Total Trade Quantity  \\\n",
              "0  2018-09-28  234.05  235.95  230.20  233.50  233.75               3069914   \n",
              "1  2018-09-27  234.55  236.80  231.10  233.80  233.25               5082859   \n",
              "2  2018-09-26  240.00  240.00  232.50  235.00  234.25               2240909   \n",
              "3  2018-09-25  233.30  236.75  232.00  236.25  236.10               2349368   \n",
              "4  2018-09-24  233.55  239.20  230.75  234.00  233.30               3423509   \n",
              "\n",
              "   Turnover (Lacs)  \n",
              "0          7162.35  \n",
              "1         11859.95  \n",
              "2          5248.60  \n",
              "3          5503.90  \n",
              "4          7999.55  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7cbba150-9875-4f08-b140-ab48d88fd4af\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Date</th>\n",
              "      <th>Open</th>\n",
              "      <th>High</th>\n",
              "      <th>Low</th>\n",
              "      <th>Last</th>\n",
              "      <th>Close</th>\n",
              "      <th>Total Trade Quantity</th>\n",
              "      <th>Turnover (Lacs)</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2018-09-28</td>\n",
              "      <td>234.05</td>\n",
              "      <td>235.95</td>\n",
              "      <td>230.20</td>\n",
              "      <td>233.50</td>\n",
              "      <td>233.75</td>\n",
              "      <td>3069914</td>\n",
              "      <td>7162.35</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2018-09-27</td>\n",
              "      <td>234.55</td>\n",
              "      <td>236.80</td>\n",
              "      <td>231.10</td>\n",
              "      <td>233.80</td>\n",
              "      <td>233.25</td>\n",
              "      <td>5082859</td>\n",
              "      <td>11859.95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2018-09-26</td>\n",
              "      <td>240.00</td>\n",
              "      <td>240.00</td>\n",
              "      <td>232.50</td>\n",
              "      <td>235.00</td>\n",
              "      <td>234.25</td>\n",
              "      <td>2240909</td>\n",
              "      <td>5248.60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2018-09-25</td>\n",
              "      <td>233.30</td>\n",
              "      <td>236.75</td>\n",
              "      <td>232.00</td>\n",
              "      <td>236.25</td>\n",
              "      <td>236.10</td>\n",
              "      <td>2349368</td>\n",
              "      <td>5503.90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2018-09-24</td>\n",
              "      <td>233.55</td>\n",
              "      <td>239.20</td>\n",
              "      <td>230.75</td>\n",
              "      <td>234.00</td>\n",
              "      <td>233.30</td>\n",
              "      <td>3423509</td>\n",
              "      <td>7999.55</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7cbba150-9875-4f08-b140-ab48d88fd4af')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7cbba150-9875-4f08-b140-ab48d88fd4af button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7cbba150-9875-4f08-b140-ab48d88fd4af');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_close = dataset_train['Close']"
      ],
      "metadata": {
        "id": "de-JIKAizVVf"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_close"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MDz70r0_zZ9W",
        "outputId": "3e74ad24-6ee0-49a1-9cc8-7cbca21e2251"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0       233.75\n",
              "1       233.25\n",
              "2       234.25\n",
              "3       236.10\n",
              "4       233.30\n",
              "         ...  \n",
              "2030    118.65\n",
              "2031    117.60\n",
              "2032    120.65\n",
              "2033    120.90\n",
              "2034    121.55\n",
              "Name: Close, Length: 2035, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(data_close)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "EVbCcmKBzgJq",
        "outputId": "2a13eb92-818a-471a-867b-873bf42d926b"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fb36ad62290>]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import MinMaxScaler\n",
        "scaler = MinMaxScaler(feature_range = (0,1))\n",
        "data_close = scaler.fit_transform(np.array(data_close).reshape(-1,1))"
      ],
      "metadata": {
        "id": "EkhA_MERzlY2"
      },
      "execution_count": 7,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data_close.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hI8d2OT8zpbh",
        "outputId": "659ca202-eeb1-4a02-9654-df2e2bbccde1"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(2035, 1)"
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(data_close)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RgsPuWbkzsx2",
        "outputId": "6b11498e-d603-4324-9445-fb5d71521b04"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[0.62418301]\n",
            " [0.62214052]\n",
            " [0.62622549]\n",
            " ...\n",
            " [0.1621732 ]\n",
            " [0.16319444]\n",
            " [0.16584967]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "training_size = int(len(data_close)*0.75)\n",
        "test_size = len(data_close) - training_size\n",
        "train_data, test_data = data_close[0:training_size,:], data_close[training_size:len(data_close),:1]"
      ],
      "metadata": {
        "id": "m6n8MdkUzv7G"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def create_dataset(dataset, time_step = 1):\n",
        "    dataX, dataY = [], []\n",
        "    for i in range(len(dataset)- time_step - 1):\n",
        "        a = dataset[i:(i+time_step), 0]\n",
        "        dataX.append(a)\n",
        "        dataY.append(dataset[i+time_step, 0])\n",
        "    return np.array(dataX), np.array(dataY)"
      ],
      "metadata": {
        "id": "WP72-fIizzzC"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "time_step = 100\n",
        "x_train, y_train = create_dataset(train_data, time_step)\n",
        "x_test, y_test = create_dataset(test_data, time_step)"
      ],
      "metadata": {
        "id": "N7zFlKsiz3x5"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Reshape the input to be [samples , time steps, features] which the requirement of LSTM\n",
        "x_train = x_train.reshape(x_train.shape[0], x_train.shape[1], 1)\n",
        "x_test = x_test.reshape(x_test.shape[0], x_test.shape[1], 1)"
      ],
      "metadata": {
        "id": "NK5ZPJeUz-rt"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#create the LSTM Model\n",
        "from keras.models import Sequential\n",
        "from keras.layers import LSTM\n",
        "from keras.layers import Dropout\n",
        "from keras.layers import Dense\n",
        "model = Sequential()\n",
        "model.add(LSTM(50,return_sequences = True, input_shape = (100,1)))\n",
        "model.add(LSTM(50,return_sequences = True))\n",
        "model.add(LSTM(50))\n",
        "model.add(Dense(1))\n",
        "model.compile(loss = 'mean_squared_error', optimizer = 'adam')"
      ],
      "metadata": {
        "id": "dszC6eAg0Bib"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "M2mPM1DA0GOG",
        "outputId": "3b649ac2-7158-4e38-b45e-18ff257328c7"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " lstm (LSTM)                 (None, 100, 50)           10400     \n",
            "                                                                 \n",
            " lstm_1 (LSTM)               (None, 100, 50)           20200     \n",
            "                                                                 \n",
            " lstm_2 (LSTM)               (None, 50)                20200     \n",
            "                                                                 \n",
            " dense (Dense)               (None, 1)                 51        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 50,851\n",
            "Trainable params: 50,851\n",
            "Non-trainable params: 0\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(x_train, y_train, validation_data = (x_test, y_test), epochs = 100, batch_size = 64, verbose = 1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "otDpetz20LRC",
        "outputId": "de235226-1fb6-45c4-9578-7a9d9227a95c"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "23/23 [==============================] - 12s 244ms/step - loss: 0.0276 - val_loss: 0.0077\n",
            "Epoch 2/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 0.0031 - val_loss: 7.2431e-04\n",
            "Epoch 3/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 0.0015 - val_loss: 0.0010\n",
            "Epoch 4/100\n",
            "23/23 [==============================] - 4s 184ms/step - loss: 0.0014 - val_loss: 0.0012\n",
            "Epoch 5/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 0.0013 - val_loss: 0.0010\n",
            "Epoch 6/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 0.0012 - val_loss: 0.0011\n",
            "Epoch 7/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 0.0012 - val_loss: 7.9034e-04\n",
            "Epoch 8/100\n",
            "23/23 [==============================] - 5s 193ms/step - loss: 0.0011 - val_loss: 0.0012\n",
            "Epoch 9/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 0.0010 - val_loss: 0.0010\n",
            "Epoch 10/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 0.0011 - val_loss: 0.0010\n",
            "Epoch 11/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 9.6507e-04 - val_loss: 9.7603e-04\n",
            "Epoch 12/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 9.8068e-04 - val_loss: 6.5400e-04\n",
            "Epoch 13/100\n",
            "23/23 [==============================] - 5s 213ms/step - loss: 0.0010 - val_loss: 9.8598e-04\n",
            "Epoch 14/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 9.4188e-04 - val_loss: 6.9577e-04\n",
            "Epoch 15/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 8.2948e-04 - val_loss: 7.5999e-04\n",
            "Epoch 16/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 8.3653e-04 - val_loss: 7.2299e-04\n",
            "Epoch 17/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 8.0498e-04 - val_loss: 8.6775e-04\n",
            "Epoch 18/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 7.6322e-04 - val_loss: 8.0528e-04\n",
            "Epoch 19/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 7.8681e-04 - val_loss: 9.3596e-04\n",
            "Epoch 20/100\n",
            "23/23 [==============================] - 4s 192ms/step - loss: 7.1390e-04 - val_loss: 8.6439e-04\n",
            "Epoch 21/100\n",
            "23/23 [==============================] - 4s 193ms/step - loss: 7.3959e-04 - val_loss: 6.9813e-04\n",
            "Epoch 22/100\n",
            "23/23 [==============================] - 4s 194ms/step - loss: 6.7609e-04 - val_loss: 0.0010\n",
            "Epoch 23/100\n",
            "23/23 [==============================] - 4s 194ms/step - loss: 8.2345e-04 - val_loss: 8.1007e-04\n",
            "Epoch 24/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 6.6860e-04 - val_loss: 8.3911e-04\n",
            "Epoch 25/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 6.3517e-04 - val_loss: 7.1172e-04\n",
            "Epoch 26/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 6.0415e-04 - val_loss: 6.3826e-04\n",
            "Epoch 27/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 6.4841e-04 - val_loss: 0.0010\n",
            "Epoch 28/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 6.3587e-04 - val_loss: 9.0502e-04\n",
            "Epoch 29/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 7.4834e-04 - val_loss: 5.7649e-04\n",
            "Epoch 30/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 6.4260e-04 - val_loss: 9.1217e-04\n",
            "Epoch 31/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 6.9438e-04 - val_loss: 8.1638e-04\n",
            "Epoch 32/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 6.1116e-04 - val_loss: 6.6118e-04\n",
            "Epoch 33/100\n",
            "23/23 [==============================] - 4s 192ms/step - loss: 5.7068e-04 - val_loss: 7.9847e-04\n",
            "Epoch 34/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 5.8452e-04 - val_loss: 6.5606e-04\n",
            "Epoch 35/100\n",
            "23/23 [==============================] - 4s 185ms/step - loss: 5.0607e-04 - val_loss: 7.6149e-04\n",
            "Epoch 36/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 5.0215e-04 - val_loss: 5.4035e-04\n",
            "Epoch 37/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 5.0517e-04 - val_loss: 5.4979e-04\n",
            "Epoch 38/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 5.0186e-04 - val_loss: 6.8178e-04\n",
            "Epoch 39/100\n",
            "23/23 [==============================] - 4s 184ms/step - loss: 5.5015e-04 - val_loss: 6.8424e-04\n",
            "Epoch 40/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 5.1915e-04 - val_loss: 5.2723e-04\n",
            "Epoch 41/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 4.9311e-04 - val_loss: 4.5395e-04\n",
            "Epoch 42/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 5.2021e-04 - val_loss: 6.0685e-04\n",
            "Epoch 43/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 5.7602e-04 - val_loss: 5.2960e-04\n",
            "Epoch 44/100\n",
            "23/23 [==============================] - 4s 183ms/step - loss: 5.7956e-04 - val_loss: 4.5549e-04\n",
            "Epoch 45/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 4.7169e-04 - val_loss: 6.1572e-04\n",
            "Epoch 46/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 4.7024e-04 - val_loss: 6.7470e-04\n",
            "Epoch 47/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 4.6720e-04 - val_loss: 4.1477e-04\n",
            "Epoch 48/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 4.3990e-04 - val_loss: 4.9258e-04\n",
            "Epoch 49/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 4.1077e-04 - val_loss: 4.9748e-04\n",
            "Epoch 50/100\n",
            "23/23 [==============================] - 4s 194ms/step - loss: 4.8409e-04 - val_loss: 5.1023e-04\n",
            "Epoch 51/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 4.3123e-04 - val_loss: 3.4443e-04\n",
            "Epoch 52/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 3.9337e-04 - val_loss: 4.1590e-04\n",
            "Epoch 53/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 4.0340e-04 - val_loss: 5.7051e-04\n",
            "Epoch 54/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 4.3705e-04 - val_loss: 5.2957e-04\n",
            "Epoch 55/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 3.5767e-04 - val_loss: 4.1219e-04\n",
            "Epoch 56/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 3.5799e-04 - val_loss: 3.0354e-04\n",
            "Epoch 57/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 3.5842e-04 - val_loss: 3.7550e-04\n",
            "Epoch 58/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 3.6536e-04 - val_loss: 2.9226e-04\n",
            "Epoch 59/100\n",
            "23/23 [==============================] - 4s 195ms/step - loss: 3.2275e-04 - val_loss: 4.0901e-04\n",
            "Epoch 60/100\n",
            "23/23 [==============================] - 4s 193ms/step - loss: 3.4031e-04 - val_loss: 3.1888e-04\n",
            "Epoch 61/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 3.7962e-04 - val_loss: 4.3767e-04\n",
            "Epoch 62/100\n",
            "23/23 [==============================] - 4s 192ms/step - loss: 3.5537e-04 - val_loss: 5.0032e-04\n",
            "Epoch 63/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 3.3116e-04 - val_loss: 3.3836e-04\n",
            "Epoch 64/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 3.0311e-04 - val_loss: 3.9287e-04\n",
            "Epoch 65/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 3.0801e-04 - val_loss: 3.9689e-04\n",
            "Epoch 66/100\n",
            "23/23 [==============================] - 4s 192ms/step - loss: 3.0792e-04 - val_loss: 3.2856e-04\n",
            "Epoch 67/100\n",
            "23/23 [==============================] - 4s 193ms/step - loss: 2.8813e-04 - val_loss: 2.5798e-04\n",
            "Epoch 68/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.8265e-04 - val_loss: 2.7848e-04\n",
            "Epoch 69/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 2.7027e-04 - val_loss: 2.8436e-04\n",
            "Epoch 70/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 2.8952e-04 - val_loss: 3.2428e-04\n",
            "Epoch 71/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 2.7099e-04 - val_loss: 2.4524e-04\n",
            "Epoch 72/100\n",
            "23/23 [==============================] - 4s 193ms/step - loss: 3.3091e-04 - val_loss: 2.7716e-04\n",
            "Epoch 73/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 3.0664e-04 - val_loss: 3.9863e-04\n",
            "Epoch 74/100\n",
            "23/23 [==============================] - 4s 192ms/step - loss: 2.7719e-04 - val_loss: 3.4806e-04\n",
            "Epoch 75/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.6943e-04 - val_loss: 2.6951e-04\n",
            "Epoch 76/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.6330e-04 - val_loss: 2.7954e-04\n",
            "Epoch 77/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.6232e-04 - val_loss: 2.1151e-04\n",
            "Epoch 78/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 3.7687e-04 - val_loss: 2.1150e-04\n",
            "Epoch 79/100\n",
            "23/23 [==============================] - 4s 194ms/step - loss: 3.2725e-04 - val_loss: 2.5976e-04\n",
            "Epoch 80/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.7242e-04 - val_loss: 2.9070e-04\n",
            "Epoch 81/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.5740e-04 - val_loss: 2.2050e-04\n",
            "Epoch 82/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 2.4132e-04 - val_loss: 2.5410e-04\n",
            "Epoch 83/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 2.5875e-04 - val_loss: 2.7253e-04\n",
            "Epoch 84/100\n",
            "23/23 [==============================] - 4s 191ms/step - loss: 2.5212e-04 - val_loss: 2.3041e-04\n",
            "Epoch 85/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 2.3659e-04 - val_loss: 2.4838e-04\n",
            "Epoch 86/100\n",
            "23/23 [==============================] - 4s 190ms/step - loss: 2.5084e-04 - val_loss: 2.8919e-04\n",
            "Epoch 87/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.4863e-04 - val_loss: 4.4971e-04\n",
            "Epoch 88/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 3.3803e-04 - val_loss: 2.5349e-04\n",
            "Epoch 89/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 2.7045e-04 - val_loss: 2.0095e-04\n",
            "Epoch 90/100\n",
            "23/23 [==============================] - 4s 184ms/step - loss: 2.6087e-04 - val_loss: 2.6213e-04\n",
            "Epoch 91/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 3.2244e-04 - val_loss: 2.7479e-04\n",
            "Epoch 92/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 2.3257e-04 - val_loss: 2.3659e-04\n",
            "Epoch 93/100\n",
            "23/23 [==============================] - 4s 189ms/step - loss: 2.3319e-04 - val_loss: 2.8313e-04\n",
            "Epoch 94/100\n",
            "23/23 [==============================] - 4s 188ms/step - loss: 2.3105e-04 - val_loss: 2.4145e-04\n",
            "Epoch 95/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 2.2344e-04 - val_loss: 1.7773e-04\n",
            "Epoch 96/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 2.1811e-04 - val_loss: 1.7574e-04\n",
            "Epoch 97/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 2.8859e-04 - val_loss: 2.2978e-04\n",
            "Epoch 98/100\n",
            "23/23 [==============================] - 4s 187ms/step - loss: 2.1160e-04 - val_loss: 1.7931e-04\n",
            "Epoch 99/100\n",
            "23/23 [==============================] - 4s 185ms/step - loss: 2.2990e-04 - val_loss: 2.2633e-04\n",
            "Epoch 100/100\n",
            "23/23 [==============================] - 4s 186ms/step - loss: 2.2253e-04 - val_loss: 2.3301e-04\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7fb2ef7bb950>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#lets predict and check performance matrices\n",
        "train_predict = model.predict(x_train)\n",
        "test_predict = model.predict(x_test)"
      ],
      "metadata": {
        "id": "D_0dc3W20PwU"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#transform back to original form\n",
        "train_predict = scaler.inverse_transform(train_predict)\n",
        "test_predict = scaler.inverse_transform(test_predict)"
      ],
      "metadata": {
        "id": "o3eK2yT-2BXw"
      },
      "execution_count": 18,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#calculate RMSE performance matrices\n",
        "import math\n",
        "from sklearn.metrics import mean_squared_error\n",
        "math.sqrt(mean_squared_error(y_train, train_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fzu0vjAw2FlW",
        "outputId": "e5d8e5cd-c2ef-4c38-b841-8287dc607e1d"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "164.41197737369228"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#test data RMSE\n",
        "math.sqrt(mean_squared_error(y_test, test_predict))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0uR_db1S2Li8",
        "outputId": "7084069d-0b5c-4019-fe26-4883220a0f27"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "106.43765121688794"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plotting\n",
        "\n",
        "#Shift train prediction for plotting\n",
        "look_back = 100\n",
        "trainPredictPlot = np.empty_like(data_close)\n",
        "trainPredictPlot[:,:] = np.nan\n",
        "trainPredictPlot[look_back:len(train_predict) + look_back, :]= train_predict\n",
        "\n",
        "#Shift train prediction for plotting\n",
        "testPredictPlot = np.empty_like(data_close)\n",
        "testPredictPlot[:,:] = np.nan\n",
        "testPredictPlot[len(train_predict) + (look_back * 2) + 1:len (data_close) - 1, :]=test_predict\n",
        "\n",
        "#Plot baseline and predictions\n",
        "plt.plot(scaler.inverse_transform(data_close))\n",
        "plt.plot(trainPredictPlot)\n",
        "plt.plot(testPredictPlot)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "E4Ux_4aC2Q53",
        "outputId": "af3a84aa-0f34-402f-95f4-44bb6855ebdf"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(test_data), x_test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SZC5QusH2WVO",
        "outputId": "b7146067-d183-4b40-9080-a5b532b8c6a5"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(509, (408, 100, 1))"
            ]
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x_input = test_data[409:].reshape(1,-1)\n",
        "x_input.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i2N_AFXv2b29",
        "outputId": "89057ebb-d9dd-495a-c453-1763eb2539f1"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(1, 100)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "temp_input = list (x_input)\n",
        "temp_input = temp_input[0].tolist()"
      ],
      "metadata": {
        "id": "PrWj-J412e8E"
      },
      "execution_count": 24,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "first_output =[]\n",
        "n_steps = 100\n",
        "nextNumberOfDays = 30\n",
        "i = 0\n",
        "\n",
        "while (i<nextNumberOfDays):\n",
        "\n",
        "  if(len(temp_input)>100):\n",
        "    x_input = np.array(temp_input[1:])\n",
        "    print(\"{}day input{}\".format(i, x_input))\n",
        "    x_input = x_input.reshape(1,-1)\n",
        "    x_input = x_input.reshape((1, n_steps, 1))\n",
        "    yhat = model.predict(x_input, verbose = 0)\n",
        "    print(\"{} day output {}\".format(i,yhat))\n",
        "    temp_input.extend(yhat[0].tolist())\n",
        "    temp_input = temp_input[1:]\n",
        "    first_output.extend(yhat.tolist())\n",
        "    i=i+1\n",
        "  else:\n",
        "    x_input = x_input.reshape((1, n_steps, 1))\n",
        "    yhat = model.predict(x_input, verbose = 0)\n",
        "    print(yhat[0])\n",
        "    temp_input.extend(yhat[0].tolist())\n",
        "    print(len(temp_input))\n",
        "    first_output.extend(yhat.tolist())\n",
        "    i = i + 1\n",
        "\n",
        "print(first_output)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "A0Qd_rED2hpa",
        "outputId": "af3f295d-d496-4fbc-eaa7-41c3ca938d60"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[0.16885628]\n",
            "101\n",
            "1day input[0.13848039 0.14011438 0.13888889 0.13541667 0.14011438 0.1380719\n",
            " 0.13071895 0.13071895 0.12867647 0.11846405 0.14644608 0.14808007\n",
            " 0.15910948 0.15992647 0.15788399 0.16441993 0.17892157 0.17933007\n",
            " 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333\n",
            " 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399\n",
            " 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641\n",
            " 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876\n",
            " 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536\n",
            " 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961\n",
            " 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412\n",
            " 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562\n",
            " 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268\n",
            " 0.15196078 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745\n",
            " 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967\n",
            " 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353\n",
            " 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405\n",
            " 0.1621732  0.16319444 0.16584967 0.16885628]\n",
            "1 day output [[0.17187847]]\n",
            "2day input[0.14011438 0.13888889 0.13541667 0.14011438 0.1380719  0.13071895\n",
            " 0.13071895 0.12867647 0.11846405 0.14644608 0.14808007 0.15910948\n",
            " 0.15992647 0.15788399 0.16441993 0.17892157 0.17933007 0.19260621\n",
            " 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458\n",
            " 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248\n",
            " 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366\n",
            " 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876 0.21098856\n",
            " 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497\n",
            " 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595\n",
            " 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935\n",
            " 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065\n",
            " 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268  0.15196078\n",
            " 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059\n",
            " 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967 0.12806373\n",
            " 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856\n",
            " 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732\n",
            " 0.16319444 0.16584967 0.16885628 0.17187847]\n",
            "2 day output [[0.17452784]]\n",
            "3day input[0.13888889 0.13541667 0.14011438 0.1380719  0.13071895 0.13071895\n",
            " 0.12867647 0.11846405 0.14644608 0.14808007 0.15910948 0.15992647\n",
            " 0.15788399 0.16441993 0.17892157 0.17933007 0.19260621 0.20812908\n",
            " 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556\n",
            " 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595\n",
            " 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549\n",
            " 0.2128268  0.21568627 0.20445261 0.21772876 0.21098856 0.21425654\n",
            " 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542\n",
            " 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039\n",
            " 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353\n",
            " 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219\n",
            " 0.17177288 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307\n",
            " 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768\n",
            " 0.12377451 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046\n",
            " 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235\n",
            " 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444\n",
            " 0.16584967 0.16885628 0.17187847 0.17452784]\n",
            "3 day output [[0.17700326]]\n",
            "4day input[0.13541667 0.14011438 0.1380719  0.13071895 0.13071895 0.12867647\n",
            " 0.11846405 0.14644608 0.14808007 0.15910948 0.15992647 0.15788399\n",
            " 0.16441993 0.17892157 0.17933007 0.19260621 0.20812908 0.18974673\n",
            " 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458\n",
            " 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444\n",
            " 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268\n",
            " 0.21568627 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817\n",
            " 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013\n",
            " 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458\n",
            " 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072\n",
            " 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288\n",
            " 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634\n",
            " 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451\n",
            " 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673\n",
            " 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908\n",
            " 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967\n",
            " 0.16885628 0.17187847 0.17452784 0.17700326]\n",
            "4 day output [[0.17936818]]\n",
            "5day input[0.14011438 0.1380719  0.13071895 0.13071895 0.12867647 0.11846405\n",
            " 0.14644608 0.14808007 0.15910948 0.15992647 0.15788399 0.16441993\n",
            " 0.17892157 0.17933007 0.19260621 0.20812908 0.18974673 0.18055556\n",
            " 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307\n",
            " 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163\n",
            " 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627\n",
            " 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275\n",
            " 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386\n",
            " 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314\n",
            " 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399\n",
            " 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046\n",
            " 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758\n",
            " 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092\n",
            " 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242\n",
            " 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928\n",
            " 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628\n",
            " 0.17187847 0.17452784 0.17700326 0.17936818]\n",
            "5 day output [[0.18165001]]\n",
            "6day input[0.1380719  0.13071895 0.13071895 0.12867647 0.11846405 0.14644608\n",
            " 0.14808007 0.15910948 0.15992647 0.15788399 0.16441993 0.17892157\n",
            " 0.17933007 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379\n",
            " 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843\n",
            " 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242\n",
            " 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261\n",
            " 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307\n",
            " 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131\n",
            " 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065\n",
            " 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222\n",
            " 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405\n",
            " 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758 0.12479575\n",
            " 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497\n",
            " 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059\n",
            " 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327\n",
            " 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847\n",
            " 0.17452784 0.17700326 0.17936818 0.18165001]\n",
            "6 day output [[0.18386994]]\n",
            "7day input[0.13071895 0.13071895 0.12867647 0.11846405 0.14644608 0.14808007\n",
            " 0.15910948 0.15992647 0.15788399 0.16441993 0.17892157 0.17933007\n",
            " 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333\n",
            " 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399\n",
            " 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641\n",
            " 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876\n",
            " 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536\n",
            " 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961\n",
            " 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412\n",
            " 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562\n",
            " 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268\n",
            " 0.15196078 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745\n",
            " 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967\n",
            " 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353\n",
            " 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405\n",
            " 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847 0.17452784\n",
            " 0.17700326 0.17936818 0.18165001 0.18386994]\n",
            "7 day output [[0.18604566]]\n",
            "8day input[0.13071895 0.12867647 0.11846405 0.14644608 0.14808007 0.15910948\n",
            " 0.15992647 0.15788399 0.16441993 0.17892157 0.17933007 0.19260621\n",
            " 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458\n",
            " 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248\n",
            " 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366\n",
            " 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876 0.21098856\n",
            " 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497\n",
            " 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595\n",
            " 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935\n",
            " 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065\n",
            " 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268  0.15196078\n",
            " 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059\n",
            " 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967 0.12806373\n",
            " 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856\n",
            " 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732\n",
            " 0.16319444 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326\n",
            " 0.17936818 0.18165001 0.18386994 0.18604566]\n",
            "8 day output [[0.18818998]]\n",
            "9day input[0.12867647 0.11846405 0.14644608 0.14808007 0.15910948 0.15992647\n",
            " 0.15788399 0.16441993 0.17892157 0.17933007 0.19260621 0.20812908\n",
            " 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556\n",
            " 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595\n",
            " 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549\n",
            " 0.2128268  0.21568627 0.20445261 0.21772876 0.21098856 0.21425654\n",
            " 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542\n",
            " 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039\n",
            " 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353\n",
            " 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219\n",
            " 0.17177288 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307\n",
            " 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768\n",
            " 0.12377451 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046\n",
            " 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235\n",
            " 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444\n",
            " 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818\n",
            " 0.18165001 0.18386994 0.18604566 0.18818998]\n",
            "9 day output [[0.19031061]]\n",
            "10day input[0.11846405 0.14644608 0.14808007 0.15910948 0.15992647 0.15788399\n",
            " 0.16441993 0.17892157 0.17933007 0.19260621 0.20812908 0.18974673\n",
            " 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458\n",
            " 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444\n",
            " 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268\n",
            " 0.21568627 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817\n",
            " 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013\n",
            " 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458\n",
            " 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072\n",
            " 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288\n",
            " 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634\n",
            " 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451\n",
            " 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673\n",
            " 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908\n",
            " 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967\n",
            " 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001\n",
            " 0.18386994 0.18604566 0.18818998 0.19031061]\n",
            "10 day output [[0.19241178]]\n",
            "11day input[0.14644608 0.14808007 0.15910948 0.15992647 0.15788399 0.16441993\n",
            " 0.17892157 0.17933007 0.19260621 0.20812908 0.18974673 0.18055556\n",
            " 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307\n",
            " 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163\n",
            " 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627\n",
            " 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275\n",
            " 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386\n",
            " 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314\n",
            " 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399\n",
            " 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046\n",
            " 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758\n",
            " 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092\n",
            " 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242\n",
            " 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928\n",
            " 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628\n",
            " 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994\n",
            " 0.18604566 0.18818998 0.19031061 0.19241178]\n",
            "11 day output [[0.19449474]]\n",
            "12day input[0.14808007 0.15910948 0.15992647 0.15788399 0.16441993 0.17892157\n",
            " 0.17933007 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379\n",
            " 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843\n",
            " 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242\n",
            " 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261\n",
            " 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307\n",
            " 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131\n",
            " 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065\n",
            " 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222\n",
            " 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405\n",
            " 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758 0.12479575\n",
            " 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497\n",
            " 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059\n",
            " 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327\n",
            " 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847\n",
            " 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566\n",
            " 0.18818998 0.19031061 0.19241178 0.19449474]\n",
            "12 day output [[0.1965594]]\n",
            "13day input[0.15910948 0.15992647 0.15788399 0.16441993 0.17892157 0.17933007\n",
            " 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333\n",
            " 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399\n",
            " 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641\n",
            " 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876\n",
            " 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536\n",
            " 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961\n",
            " 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412\n",
            " 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562\n",
            " 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268\n",
            " 0.15196078 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745\n",
            " 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967\n",
            " 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353\n",
            " 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405\n",
            " 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847 0.17452784\n",
            " 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998\n",
            " 0.19031061 0.19241178 0.19449474 0.1965594 ]\n",
            "13 day output [[0.19860502]]\n",
            "14day input[0.15992647 0.15788399 0.16441993 0.17892157 0.17933007 0.19260621\n",
            " 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458\n",
            " 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248\n",
            " 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366\n",
            " 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876 0.21098856\n",
            " 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497\n",
            " 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595\n",
            " 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935\n",
            " 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065\n",
            " 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268  0.15196078\n",
            " 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059\n",
            " 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967 0.12806373\n",
            " 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856\n",
            " 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732\n",
            " 0.16319444 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326\n",
            " 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061\n",
            " 0.19241178 0.19449474 0.1965594  0.19860502]\n",
            "14 day output [[0.20063032]]\n",
            "15day input[0.15788399 0.16441993 0.17892157 0.17933007 0.19260621 0.20812908\n",
            " 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556\n",
            " 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595\n",
            " 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549\n",
            " 0.2128268  0.21568627 0.20445261 0.21772876 0.21098856 0.21425654\n",
            " 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542\n",
            " 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039\n",
            " 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353\n",
            " 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219\n",
            " 0.17177288 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307\n",
            " 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768\n",
            " 0.12377451 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046\n",
            " 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235\n",
            " 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444\n",
            " 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818\n",
            " 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178\n",
            " 0.19449474 0.1965594  0.19860502 0.20063032]\n",
            "15 day output [[0.20263451]]\n",
            "16day input[0.16441993 0.17892157 0.17933007 0.19260621 0.20812908 0.18974673\n",
            " 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458\n",
            " 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444\n",
            " 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268\n",
            " 0.21568627 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817\n",
            " 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013\n",
            " 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458\n",
            " 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072\n",
            " 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288\n",
            " 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634\n",
            " 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451\n",
            " 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673\n",
            " 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908\n",
            " 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967\n",
            " 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001\n",
            " 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474\n",
            " 0.1965594  0.19860502 0.20063032 0.20263451]\n",
            "16 day output [[0.20461702]]\n",
            "17day input[0.17892157 0.17933007 0.19260621 0.20812908 0.18974673 0.18055556\n",
            " 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307\n",
            " 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163\n",
            " 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627\n",
            " 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275\n",
            " 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386\n",
            " 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314\n",
            " 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399\n",
            " 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046\n",
            " 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758\n",
            " 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092\n",
            " 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242\n",
            " 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928\n",
            " 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628\n",
            " 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994\n",
            " 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474 0.1965594\n",
            " 0.19860502 0.20063032 0.20263451 0.20461702]\n",
            "17 day output [[0.20657745]]\n",
            "18day input[0.17933007 0.19260621 0.20812908 0.18974673 0.18055556 0.18239379\n",
            " 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843\n",
            " 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242\n",
            " 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261\n",
            " 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307\n",
            " 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131\n",
            " 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065\n",
            " 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222\n",
            " 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405\n",
            " 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758 0.12479575\n",
            " 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497\n",
            " 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059\n",
            " 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327\n",
            " 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847\n",
            " 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566\n",
            " 0.18818998 0.19031061 0.19241178 0.19449474 0.1965594  0.19860502\n",
            " 0.20063032 0.20263451 0.20461702 0.20657745]\n",
            "18 day output [[0.20851585]]\n",
            "19day input[0.19260621 0.20812908 0.18974673 0.18055556 0.18239379 0.17708333\n",
            " 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399\n",
            " 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641\n",
            " 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876\n",
            " 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536\n",
            " 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961\n",
            " 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412\n",
            " 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562\n",
            " 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268\n",
            " 0.15196078 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745\n",
            " 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967\n",
            " 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353\n",
            " 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405\n",
            " 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847 0.17452784\n",
            " 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998\n",
            " 0.19031061 0.19241178 0.19449474 0.1965594  0.19860502 0.20063032\n",
            " 0.20263451 0.20461702 0.20657745 0.20851585]\n",
            "19 day output [[0.21043254]]\n",
            "20day input[0.20812908 0.18974673 0.18055556 0.18239379 0.17708333 0.17810458\n",
            " 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248\n",
            " 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366\n",
            " 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876 0.21098856\n",
            " 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497\n",
            " 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595\n",
            " 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935\n",
            " 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065\n",
            " 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268  0.15196078\n",
            " 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059\n",
            " 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967 0.12806373\n",
            " 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856\n",
            " 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732\n",
            " 0.16319444 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326\n",
            " 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061\n",
            " 0.19241178 0.19449474 0.1965594  0.19860502 0.20063032 0.20263451\n",
            " 0.20461702 0.20657745 0.20851585 0.21043254]\n",
            "20 day output [[0.21232791]]\n",
            "21day input[0.18974673 0.18055556 0.18239379 0.17708333 0.17810458 0.18055556\n",
            " 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595\n",
            " 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549\n",
            " 0.2128268  0.21568627 0.20445261 0.21772876 0.21098856 0.21425654\n",
            " 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542\n",
            " 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039\n",
            " 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353\n",
            " 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219\n",
            " 0.17177288 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307\n",
            " 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768\n",
            " 0.12377451 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046\n",
            " 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235\n",
            " 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444\n",
            " 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818\n",
            " 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178\n",
            " 0.19449474 0.1965594  0.19860502 0.20063032 0.20263451 0.20461702\n",
            " 0.20657745 0.20851585 0.21043254 0.21232791]\n",
            "21 day output [[0.21420252]]\n",
            "22day input[0.18055556 0.18239379 0.17708333 0.17810458 0.18055556 0.17810458\n",
            " 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444\n",
            " 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268\n",
            " 0.21568627 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817\n",
            " 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013\n",
            " 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458\n",
            " 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072\n",
            " 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288\n",
            " 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634\n",
            " 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451\n",
            " 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673\n",
            " 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908\n",
            " 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967\n",
            " 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001\n",
            " 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474\n",
            " 0.1965594  0.19860502 0.20063032 0.20263451 0.20461702 0.20657745\n",
            " 0.20851585 0.21043254 0.21232791 0.21420252]\n",
            "22 day output [[0.21605691]]\n",
            "23day input[0.18239379 0.17708333 0.17810458 0.18055556 0.17810458 0.17851307\n",
            " 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163\n",
            " 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627\n",
            " 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275\n",
            " 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386\n",
            " 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314\n",
            " 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399\n",
            " 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046\n",
            " 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758\n",
            " 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092\n",
            " 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242\n",
            " 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928\n",
            " 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628\n",
            " 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994\n",
            " 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474 0.1965594\n",
            " 0.19860502 0.20063032 0.20263451 0.20461702 0.20657745 0.20851585\n",
            " 0.21043254 0.21232791 0.21420252 0.21605691]\n",
            "23 day output [[0.21789186]]\n",
            "24day input[0.17708333 0.17810458 0.18055556 0.17810458 0.17851307 0.19607843\n",
            " 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242\n",
            " 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261\n",
            " 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307\n",
            " 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131\n",
            " 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065\n",
            " 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222\n",
            " 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405\n",
            " 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758 0.12479575\n",
            " 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497\n",
            " 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059\n",
            " 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327\n",
            " 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847\n",
            " 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566\n",
            " 0.18818998 0.19031061 0.19241178 0.19449474 0.1965594  0.19860502\n",
            " 0.20063032 0.20263451 0.20461702 0.20657745 0.20851585 0.21043254\n",
            " 0.21232791 0.21420252 0.21605691 0.21789186]\n",
            "24 day output [[0.21970797]]\n",
            "25day input[0.17810458 0.18055556 0.17810458 0.17851307 0.19607843 0.18913399\n",
            " 0.18954248 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641\n",
            " 0.19873366 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876\n",
            " 0.21098856 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536\n",
            " 0.16033497 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961\n",
            " 0.16278595 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412\n",
            " 0.17544935 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562\n",
            " 0.16830065 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268\n",
            " 0.15196078 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745\n",
            " 0.11397059 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967\n",
            " 0.12806373 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353\n",
            " 0.14848856 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405\n",
            " 0.1621732  0.16319444 0.16584967 0.16885628 0.17187847 0.17452784\n",
            " 0.17700326 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998\n",
            " 0.19031061 0.19241178 0.19449474 0.1965594  0.19860502 0.20063032\n",
            " 0.20263451 0.20461702 0.20657745 0.20851585 0.21043254 0.21232791\n",
            " 0.21420252 0.21605691 0.21789186 0.21970797]\n",
            "25 day output [[0.22150573]]\n",
            "26day input[0.18055556 0.17810458 0.17851307 0.19607843 0.18913399 0.18954248\n",
            " 0.19403595 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366\n",
            " 0.1997549  0.2128268  0.21568627 0.20445261 0.21772876 0.21098856\n",
            " 0.21425654 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497\n",
            " 0.16564542 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595\n",
            " 0.16973039 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935\n",
            " 0.18382353 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065\n",
            " 0.1693219  0.17177288 0.16156046 0.14971405 0.1503268  0.15196078\n",
            " 0.14726307 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059\n",
            " 0.1190768  0.12377451 0.13562092 0.12908497 0.13459967 0.12806373\n",
            " 0.13031046 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856\n",
            " 0.14338235 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732\n",
            " 0.16319444 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326\n",
            " 0.17936818 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061\n",
            " 0.19241178 0.19449474 0.1965594  0.19860502 0.20063032 0.20263451\n",
            " 0.20461702 0.20657745 0.20851585 0.21043254 0.21232791 0.21420252\n",
            " 0.21605691 0.21789186 0.21970797 0.22150573]\n",
            "26 day output [[0.22328596]]\n",
            "27day input[0.17810458 0.17851307 0.19607843 0.18913399 0.18954248 0.19403595\n",
            " 0.19444444 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549\n",
            " 0.2128268  0.21568627 0.20445261 0.21772876 0.21098856 0.21425654\n",
            " 0.19750817 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542\n",
            " 0.17116013 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039\n",
            " 0.17810458 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353\n",
            " 0.19138072 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219\n",
            " 0.17177288 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307\n",
            " 0.14501634 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768\n",
            " 0.12377451 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046\n",
            " 0.12724673 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235\n",
            " 0.14562908 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444\n",
            " 0.16584967 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818\n",
            " 0.18165001 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178\n",
            " 0.19449474 0.1965594  0.19860502 0.20063032 0.20263451 0.20461702\n",
            " 0.20657745 0.20851585 0.21043254 0.21232791 0.21420252 0.21605691\n",
            " 0.21789186 0.21970797 0.22150573 0.22328596]\n",
            "27 day output [[0.22504911]]\n",
            "28day input[0.17851307 0.19607843 0.18913399 0.18954248 0.19403595 0.19444444\n",
            " 0.20200163 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268\n",
            " 0.21568627 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817\n",
            " 0.18811275 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013\n",
            " 0.17422386 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458\n",
            " 0.17034314 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072\n",
            " 0.18913399 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288\n",
            " 0.16156046 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634\n",
            " 0.14603758 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451\n",
            " 0.13562092 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673\n",
            " 0.13521242 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908\n",
            " 0.15236928 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967\n",
            " 0.16885628 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001\n",
            " 0.18386994 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474\n",
            " 0.1965594  0.19860502 0.20063032 0.20263451 0.20461702 0.20657745\n",
            " 0.20851585 0.21043254 0.21232791 0.21420252 0.21605691 0.21789186\n",
            " 0.21970797 0.22150573 0.22328596 0.22504911]\n",
            "28 day output [[0.22679582]]\n",
            "29day input[0.19607843 0.18913399 0.18954248 0.19403595 0.19444444 0.20200163\n",
            " 0.19771242 0.19934641 0.19873366 0.1997549  0.2128268  0.21568627\n",
            " 0.20445261 0.21772876 0.21098856 0.21425654 0.19750817 0.18811275\n",
            " 0.17851307 0.17381536 0.16033497 0.16564542 0.17116013 0.17422386\n",
            " 0.18035131 0.17401961 0.16278595 0.16973039 0.17810458 0.17034314\n",
            " 0.16830065 0.17279412 0.17544935 0.18382353 0.19138072 0.18913399\n",
            " 0.19097222 0.17238562 0.16830065 0.1693219  0.17177288 0.16156046\n",
            " 0.14971405 0.1503268  0.15196078 0.14726307 0.14501634 0.14603758\n",
            " 0.12479575 0.13112745 0.11397059 0.1190768  0.12377451 0.13562092\n",
            " 0.12908497 0.13459967 0.12806373 0.13031046 0.12724673 0.13521242\n",
            " 0.14522059 0.15257353 0.14848856 0.14338235 0.14562908 0.15236928\n",
            " 0.15400327 0.14971405 0.1621732  0.16319444 0.16584967 0.16885628\n",
            " 0.17187847 0.17452784 0.17700326 0.17936818 0.18165001 0.18386994\n",
            " 0.18604566 0.18818998 0.19031061 0.19241178 0.19449474 0.1965594\n",
            " 0.19860502 0.20063032 0.20263451 0.20461702 0.20657745 0.20851585\n",
            " 0.21043254 0.21232791 0.21420252 0.21605691 0.21789186 0.21970797\n",
            " 0.22150573 0.22328596 0.22504911 0.22679582]\n",
            "29 day output [[0.22852665]]\n",
            "[[0.16885627806186676], [0.17187847197055817], [0.1745278388261795], [0.17700326442718506], [0.17936818301677704], [0.18165001273155212], [0.18386994302272797], [0.18604566156864166], [0.18818998336791992], [0.19031061232089996], [0.19241178035736084], [0.19449473917484283], [0.19655939936637878], [0.198605015873909], [0.200630322098732], [0.2026345133781433], [0.20461702346801758], [0.20657745003700256], [0.20851585268974304], [0.21043254435062408], [0.21232791244983673], [0.21420252323150635], [0.2160569131374359], [0.2178918570280075], [0.21970796585083008], [0.22150573134422302], [0.2232859581708908], [0.22504910826683044], [0.22679582238197327], [0.22852665185928345]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "day_new = np.arange(1,101)\n",
        "day_pred = np.arange(101,131)"
      ],
      "metadata": {
        "id": "xPPMzPlC2mfH"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df3 = data_close.tolist()\n",
        "df3.extend(first_output)"
      ],
      "metadata": {
        "id": "MzFtwzv02t6g"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(data_close)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c_VPErgi2x8O",
        "outputId": "ec51dbcc-85f3-498b-d736-ad8438c7e473"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2035"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.plot(day_new, scaler.inverse_transform(data_close[1935:]))\n",
        "plt.plot(day_pred, scaler.inverse_transform(first_output))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "9xxxToAz20zs",
        "outputId": "943e26cb-6e8d-4d2f-c2d9-e445b6a9b538"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[<matplotlib.lines.Line2D at 0x7fb2ef551310>]"
            ]
          },
          "metadata": {},
          "execution_count": 29
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "KIGA3HDM23xV"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}